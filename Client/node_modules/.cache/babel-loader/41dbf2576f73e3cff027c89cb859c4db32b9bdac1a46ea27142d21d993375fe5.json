{"ast":null,"code":"var _jsxFileName = \"/Users/oleg/katy/Saaga/Ibrahim/frontend/laitekanta/Client/src/components/loginButton.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport Modal from 'react-modal';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst LoginButton = () => {\n  _s();\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const handleOpenModal = () => {\n    setIsModalOpen(true);\n  };\n  const handleCloseModal = () => {\n    setIsModalOpen(false);\n  };\n  const handleLogin = () => {\n    // Your login logic goes here\n    console.log('Logging in with username:', username, 'and password:', password);\n    setUsername('');\n    setPassword('');\n    setIsModalOpen(false);\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleOpenModal,\n      children: \"Login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      isOpen: isModalOpen,\n      onRequestClose: handleCloseModal,\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Kirjaudu sis\\xE4\\xE4n\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleLogin,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"username\",\n          children: \"Username:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"username\",\n          type: \"text\",\n          value: username,\n          onChange: e => setUsername(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"password\",\n          children: \"Password:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"password\",\n          type: \"password\",\n          value: password,\n          onChange: e => setPassword(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s(LoginButton, \"8qhzIddEBVFknKxRqvg9UViYYEY=\");\n_c = LoginButton;\nexport default LoginButton;\nvar _c;\n$RefreshReg$(_c, \"LoginButton\");","map":{"version":3,"names":["React","useState","Modal","jsxDEV","_jsxDEV","Fragment","_Fragment","LoginButton","_s","isModalOpen","setIsModalOpen","username","setUsername","password","setPassword","handleOpenModal","handleCloseModal","handleLogin","console","log","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","isOpen","onRequestClose","onSubmit","htmlFor","id","type","value","onChange","e","target","_c","$RefreshReg$"],"sources":["/Users/oleg/katy/Saaga/Ibrahim/frontend/laitekanta/Client/src/components/loginButton.jsx"],"sourcesContent":["import React, { useState } from 'react';\nimport Modal from 'react-modal';\n\nconst LoginButton = () => {\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n\n  const handleOpenModal = () => {\n    setIsModalOpen(true);\n  };\n\n  const handleCloseModal = () => {\n    setIsModalOpen(false);\n  };\n\n  const handleLogin = () => {\n    // Your login logic goes here\n    console.log('Logging in with username:', username, 'and password:', password);\n    setUsername('');\n    setPassword('');\n    setIsModalOpen(false);\n  };\n\n  return (\n    <>\n      <button onClick={handleOpenModal}>Login</button>\n      <Modal isOpen={isModalOpen} onRequestClose={handleCloseModal}>\n        <h2>Kirjaudu sisään</h2>\n        <form onSubmit={handleLogin}>\n          <label htmlFor=\"username\">Username:</label>\n          <input\n            id=\"username\"\n            type=\"text\"\n            value={username}\n            onChange={(e) => setUsername(e.target.value)}\n          />\n          <label htmlFor=\"password\">Password:</label>\n          <input\n            id=\"password\"\n            type=\"password\"\n            value={password}\n            onChange={(e) => setPassword(e.target.value)}\n          />\n          <button type=\"submit\">Submit</button>\n        </form>\n      </Modal>\n    </>\n  );\n};\n\nexport default LoginButton;\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}