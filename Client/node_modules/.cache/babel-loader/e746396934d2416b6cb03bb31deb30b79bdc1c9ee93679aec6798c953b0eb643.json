{"ast":null,"code":"var _jsxFileName = \"/Users/oleg/katy/Saaga/Ibrahim/frontend/laitekanta/Client/src/components/Login/loginButton.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport Modal from 'react-modal';\nimport './loginButton.css';\nimport Axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LoginButton = () => {\n  _s();\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const [errorMessage, setErrorMessage] = useState('');\n  const handleOpenModal = () => {\n    setIsModalOpen(true);\n  };\n  const handleCloseModal = () => {\n    setIsModalOpen(false);\n  };\n  const checkCredentials = () => {\n    Axios.post(\"http://localhost:3001/api/laitekanta/users\", {\n      username: username,\n      password: password\n    }).then(response => {\n      const isValid = response.data.isValid;\n      if (isValid) {\n        // Credentials are correct\n        setErrorMessage('');\n        handleLogin();\n      } else {\n        // Credentials are incorrect\n        setErrorMessage('Invalid username or password');\n      }\n    }).catch(error => {\n      // Handle error\n      console.error(error);\n      setErrorMessage('Username or password are incorrect');\n    });\n  };\n  const handleLogin = () => {\n    // Handle successful login\n    setUsername('');\n    setPassword('');\n    setIsModalOpen(false);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"modal\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Please enter username and password\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"loginForm\",\n      onSubmit: e => {\n        e.preventDefault();\n        checkCredentials();\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"username\",\n        children: \"Username:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        name: \"username\",\n        type: \"text\",\n        autoComplete: \"username\",\n        required: true,\n        id: \"username\",\n        value: username,\n        style: {\n          width: '200px',\n          height: '30px'\n        },\n        onChange: e => setUsername(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"password\",\n        children: \"Password:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        name: \"password\",\n        autoComplete: \"current-password\",\n        required: true,\n        id: \"password\",\n        type: \"password\",\n        value: password,\n        style: {\n          width: '200px',\n          height: '30px'\n        },\n        onChange: e => setPassword(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"invalid-feedback\",\n        children: errorMessage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"submitbtn\",\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n};\n_s(LoginButton, \"4AU5c7tI9c/ouRAcMDKE8Y8is/4=\");\n_c = LoginButton;\nexport default LoginButton;\nvar _c;\n$RefreshReg$(_c, \"LoginButton\");","map":{"version":3,"names":["React","useState","Modal","Axios","jsxDEV","_jsxDEV","LoginButton","_s","isModalOpen","setIsModalOpen","username","setUsername","password","setPassword","errorMessage","setErrorMessage","handleOpenModal","handleCloseModal","checkCredentials","post","then","response","isValid","data","handleLogin","catch","error","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","e","preventDefault","htmlFor","name","type","autoComplete","required","id","value","style","width","height","onChange","target","_c","$RefreshReg$"],"sources":["/Users/oleg/katy/Saaga/Ibrahim/frontend/laitekanta/Client/src/components/Login/loginButton.jsx"],"sourcesContent":["import React, { useState } from 'react';\nimport Modal from 'react-modal';\nimport './loginButton.css';\nimport Axios from 'axios';\n\nconst LoginButton = () => {\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const [errorMessage, setErrorMessage] = useState('');\n\n  const handleOpenModal = () => {\n    setIsModalOpen(true);\n  };\n\n  const handleCloseModal = () => {\n    setIsModalOpen(false);\n  };\n\n  const checkCredentials = () => {\n    Axios.post(\"http://localhost:3001/api/laitekanta/users\", {\n      username: username,\n      password: password\n    })\n      .then((response) => {\n        const isValid = response.data.isValid;\n        if (isValid) {\n          // Credentials are correct\n          setErrorMessage('');\n          handleLogin();\n        } else {\n          // Credentials are incorrect\n          setErrorMessage('Invalid username or password');\n        }\n      })\n      .catch((error) => {\n        // Handle error\n        console.error(error);\n        setErrorMessage('Username or password are incorrect');\n      });\n  };\n\n  const handleLogin = () => {\n    // Handle successful login\n    setUsername('');\n    setPassword('');\n    setIsModalOpen(false);\n  };\n\n  return (\n    <div className='modal'>\n      {/* <button onClick={handleOpenModal} className='logbtn'>Kirjaudu sisään</button>\n      <Modal isOpen={isModalOpen} onRequestClose={handleCloseModal} className='modal'> */}\n          <h2>Please enter username and password</h2>\n          <form className='loginForm' onSubmit={(e) => { e.preventDefault(); checkCredentials(); }}>\n            <label htmlFor=\"username\">Username:</label>\n            <input\n              name=\"username\"\n              type=\"text\"\n              autoComplete=\"username\"\n              required\n              id=\"username\"\n              value={username}\n              style={{width: '200px', height: '30px'}}\n              onChange={(e) => setUsername(e.target.value)}\n            />\n            <label htmlFor=\"password\">Password:</label>\n            <input\n              name=\"password\"\n              autoComplete=\"current-password\"\n              required\n              id=\"password\"\n              type=\"password\"\n              value={password}\n              style={{width: '200px', height: '30px'}}\n              onChange={(e) => setPassword(e.target.value)}\n            />\n            <div className=\"invalid-feedback\">{errorMessage}</div>\n            <button type=\"submit\" className='submitbtn'>Submit</button>\n          </form>\n      {/* </Modal> */}\n    </div>\n  );\n};\n\nexport default LoginButton;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,KAAK,MAAM,aAAa;AAC/B,OAAO,mBAAmB;AAC1B,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,WAAW,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACxB,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGR,QAAQ,CAAC,KAAK,CAAC;EACrD,MAAM,CAACS,QAAQ,EAAEC,WAAW,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACW,QAAQ,EAAEC,WAAW,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACa,YAAY,EAAEC,eAAe,CAAC,GAAGd,QAAQ,CAAC,EAAE,CAAC;EAEpD,MAAMe,eAAe,GAAGA,CAAA,KAAM;IAC5BP,cAAc,CAAC,IAAI,CAAC;EACtB,CAAC;EAED,MAAMQ,gBAAgB,GAAGA,CAAA,KAAM;IAC7BR,cAAc,CAAC,KAAK,CAAC;EACvB,CAAC;EAED,MAAMS,gBAAgB,GAAGA,CAAA,KAAM;IAC7Bf,KAAK,CAACgB,IAAI,CAAC,4CAA4C,EAAE;MACvDT,QAAQ,EAAEA,QAAQ;MAClBE,QAAQ,EAAEA;IACZ,CAAC,CAAC,CACCQ,IAAI,CAAEC,QAAQ,IAAK;MAClB,MAAMC,OAAO,GAAGD,QAAQ,CAACE,IAAI,CAACD,OAAO;MACrC,IAAIA,OAAO,EAAE;QACX;QACAP,eAAe,CAAC,EAAE,CAAC;QACnBS,WAAW,EAAE;MACf,CAAC,MAAM;QACL;QACAT,eAAe,CAAC,8BAA8B,CAAC;MACjD;IACF,CAAC,CAAC,CACDU,KAAK,CAAEC,KAAK,IAAK;MAChB;MACAC,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC;MACpBX,eAAe,CAAC,oCAAoC,CAAC;IACvD,CAAC,CAAC;EACN,CAAC;EAED,MAAMS,WAAW,GAAGA,CAAA,KAAM;IACxB;IACAb,WAAW,CAAC,EAAE,CAAC;IACfE,WAAW,CAAC,EAAE,CAAC;IACfJ,cAAc,CAAC,KAAK,CAAC;EACvB,CAAC;EAED,oBACEJ,OAAA;IAAKuB,SAAS,EAAC,OAAO;IAAAC,QAAA,gBAGhBxB,OAAA;MAAAwB,QAAA,EAAI;IAAkC;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAK,eAC3C5B,OAAA;MAAMuB,SAAS,EAAC,WAAW;MAACM,QAAQ,EAAGC,CAAC,IAAK;QAAEA,CAAC,CAACC,cAAc,EAAE;QAAElB,gBAAgB,EAAE;MAAE,CAAE;MAAAW,QAAA,gBACvFxB,OAAA;QAAOgC,OAAO,EAAC,UAAU;QAAAR,QAAA,EAAC;MAAS;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAQ,eAC3C5B,OAAA;QACEiC,IAAI,EAAC,UAAU;QACfC,IAAI,EAAC,MAAM;QACXC,YAAY,EAAC,UAAU;QACvBC,QAAQ;QACRC,EAAE,EAAC,UAAU;QACbC,KAAK,EAAEjC,QAAS;QAChBkC,KAAK,EAAE;UAACC,KAAK,EAAE,OAAO;UAAEC,MAAM,EAAE;QAAM,CAAE;QACxCC,QAAQ,EAAGZ,CAAC,IAAKxB,WAAW,CAACwB,CAAC,CAACa,MAAM,CAACL,KAAK;MAAE;QAAAb,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAC7C,eACF5B,OAAA;QAAOgC,OAAO,EAAC,UAAU;QAAAR,QAAA,EAAC;MAAS;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAQ,eAC3C5B,OAAA;QACEiC,IAAI,EAAC,UAAU;QACfE,YAAY,EAAC,kBAAkB;QAC/BC,QAAQ;QACRC,EAAE,EAAC,UAAU;QACbH,IAAI,EAAC,UAAU;QACfI,KAAK,EAAE/B,QAAS;QAChBgC,KAAK,EAAE;UAACC,KAAK,EAAE,OAAO;UAAEC,MAAM,EAAE;QAAM,CAAE;QACxCC,QAAQ,EAAGZ,CAAC,IAAKtB,WAAW,CAACsB,CAAC,CAACa,MAAM,CAACL,KAAK;MAAE;QAAAb,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAC7C,eACF5B,OAAA;QAAKuB,SAAS,EAAC,kBAAkB;QAAAC,QAAA,EAAEf;MAAY;QAAAgB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAO,eACtD5B,OAAA;QAAQkC,IAAI,EAAC,QAAQ;QAACX,SAAS,EAAC,WAAW;QAAAC,QAAA,EAAC;MAAM;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAS;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACtD;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QAEP;AAEV,CAAC;AAAC1B,EAAA,CA9EID,WAAW;AAAA2C,EAAA,GAAX3C,WAAW;AAgFjB,eAAeA,WAAW;AAAC,IAAA2C,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}