{"ast":null,"code":"var _jsxFileName = \"/Users/abhisheksharma/laitekanta/Client/src/components/DeviceList.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport Axios from 'axios';\nimport './searching.css';\nimport Card from '@mui/material/Card';\nimport CardActions from '@mui/material/CardActions';\nimport CardContent from '@mui/material/CardContent';\nimport Button from '@mui/material/Button';\nimport Typography from '@mui/material/Typography';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faSearch } from '@fortawesome/free-solid-svg-icons';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DeviceList = () => {\n  _s();\n  const [searchTerm, setSearchTerm] = useState('');\n  const [deviceList, setDeviceList] = useState([]);\n  useEffect(() => {\n    Axios.get(\"http://localhost:3001/api/get\").then(response => {\n      setDeviceList(response.data);\n    });\n  }, []);\n  const deleteDevice = item => {\n    Axios.delete(`http://localhost:3001/api/delete/${item}`).then(() => {\n      setDeviceList(deviceList.filter(val => {\n        return val.email !== item;\n      }));\n    });\n  };\n  const handleSearchTermChange = event => {\n    setSearchTerm(event.target.value);\n  };\n  const searchDevice = device => {\n    if (device.email.toLowerCase().includes(searchTerm.toLowerCase()) || device.serialNumber.toLowerCase().includes(searchTerm.toLowerCase())) {\n      return true;\n    }\n    return false;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Search by email or Serial no\",\n        className: \"btn\",\n        onChange: handleSearchTermChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), searchTerm !== \"\" && deviceList.filter(searchDevice).map(val => {\n      const issuingDateFormatted = val.issuingDate ? new Date(val.issuingDate).toLocaleDateString('fi-FI') : '';\n      const returningDateFormatted = val.returningDate ? new Date(val.returningDate).toLocaleDateString('fi-FI') : '';\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          //height:'100vh',\n          display: 'flex',\n          flexDirection: 'row',\n          flexWrap: 'wrap',\n          // justifyContent: 'center',\n          rowGap: '10px',\n          columnGap: '10px',\n          marginTop: '10px'\n\n          // marginBottom: '10px',\n          // paddingBottom: '10px'\n        },\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          sx: {\n            maxWidth: 365\n          },\n          style: {\n            background: 'pink'\n          },\n          children: [/*#__PURE__*/_jsxDEV(CardContent, {\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              gutterBottom: true,\n              variant: \"h10\",\n              component: \"div\",\n              children: [\"EMAIL:\", val.email]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 76,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              gutterBottom: true,\n              variant: \"h10\",\n              component: \"div\",\n              children: [\"SERIAL NUMBER: \", val.serialNumber]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 79,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"body2\",\n              color: \"text.secondary\",\n              children: [\"ISSUING DATE: \", issuingDateFormatted]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 82,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"body2\",\n              color: \"text.secondary\",\n              children: [\"RETURNING DATE: \", returningDateFormatted]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 84,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(CardActions, {\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              size: \"small\",\n              onClick: () => {\n                if (window.confirm(`Are you sure you want to delete the device with email ${val.email}?`)) {\n                  deleteDevice(val.email);\n                }\n              },\n              children: \"DELETE\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 88,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }, this);\n    })]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n};\n_s(DeviceList, \"7QFu7vFCotSbxnKUW9PQpiVKWuM=\");\n_c = DeviceList;\nexport default DeviceList;\nvar _c;\n$RefreshReg$(_c, \"DeviceList\");","map":{"version":3,"names":["React","useState","useEffect","Axios","Card","CardActions","CardContent","Button","Typography","FontAwesomeIcon","faSearch","jsxDEV","_jsxDEV","DeviceList","_s","searchTerm","setSearchTerm","deviceList","setDeviceList","get","then","response","data","deleteDevice","item","delete","filter","val","email","handleSearchTermChange","event","target","value","searchDevice","device","toLowerCase","includes","serialNumber","children","className","type","placeholder","onChange","fileName","_jsxFileName","lineNumber","columnNumber","map","issuingDateFormatted","issuingDate","Date","toLocaleDateString","returningDateFormatted","returningDate","style","display","flexDirection","flexWrap","rowGap","columnGap","marginTop","sx","maxWidth","background","gutterBottom","variant","component","color","size","onClick","window","confirm","_c","$RefreshReg$"],"sources":["/Users/abhisheksharma/laitekanta/Client/src/components/DeviceList.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport Axios from 'axios';\nimport './searching.css'\nimport Card from '@mui/material/Card';\nimport CardActions from '@mui/material/CardActions';\nimport CardContent from '@mui/material/CardContent';\nimport Button from '@mui/material/Button';\nimport Typography from '@mui/material/Typography';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faSearch } from '@fortawesome/free-solid-svg-icons'\n\n\nconst DeviceList = () => {\n  const [searchTerm, setSearchTerm] = useState('');\n  const [deviceList, setDeviceList] = useState([]);\n\n\n  useEffect(() => {\n    Axios.get(\"http://localhost:3001/api/get\").then((response) => {\n        setDeviceList(response.data)\n    })\n\n}, [])\n\n  const deleteDevice = (item) => {\n    Axios.delete(`http://localhost:3001/api/delete/${item}`).then(() => {\n      setDeviceList(deviceList.filter((val) => {\n        return val.email !== item;\n      }));\n    });\n  };\n\n  const handleSearchTermChange = (event) => {\n    setSearchTerm(event.target.value);\n  };\n\n  const searchDevice = (device) => {\n    if (\n      device.email.toLowerCase().includes(searchTerm.toLowerCase()) ||\n      device.serialNumber.toLowerCase().includes(searchTerm.toLowerCase())\n    ) {\n      return true;\n    }\n    return false;\n  };\n\n  return (\n    <div>\n      <div className='container'>\n      <input type=\"text\" placeholder='Search by email or Serial no' className='btn' onChange={handleSearchTermChange} />\n      </div>\n\n      {searchTerm !== \"\" && deviceList.filter(searchDevice).map((val) => {\n        const issuingDateFormatted = val.issuingDate ? new Date(val.issuingDate).toLocaleDateString('fi-FI') : '';\n        const returningDateFormatted = val.returningDate ? new Date(val.returningDate).toLocaleDateString('fi-FI') : '';\n        return (<div style={{\n            //height:'100vh',\n            display: 'flex',\n            flexDirection: 'row',\n            flexWrap: 'wrap',\n            // justifyContent: 'center',\n            rowGap: '10px',\n            columnGap: '10px',\n            marginTop: '10px', \n          \n            // marginBottom: '10px',\n            // paddingBottom: '10px'\n            \n        \n            \n          }}>\n        \n            <Card sx={{ maxWidth: 365 }} style={{background: 'pink'}}>\n      \n            <CardContent>\n              <Typography gutterBottom variant=\"h10\" component=\"div\">\n              EMAIL:{val.email}\n              </Typography>\n              <Typography gutterBottom variant=\"h10\" component=\"div\">\n              SERIAL NUMBER: {val.serialNumber}\n              </Typography>\n              <Typography variant=\"body2\" color=\"text.secondary\">ISSUING DATE: {issuingDateFormatted}\n              </Typography>\n              <Typography variant=\"body2\" color=\"text.secondary\">RETURNING DATE: {returningDateFormatted}\n              </Typography>\n            </CardContent>\n            <CardActions>\n              <Button size=\"small\" onClick={() => {\n                    if (window.confirm(`Are you sure you want to delete the device with email ${val.email}?`)) {\n                      deleteDevice(val.email);\n                    }\n                  }}>DELETE</Button>\n              \n            </CardActions>\n          </Card>\n          </div>\n        )\n      })}\n    </div>\n  );\n};\n\nexport default DeviceList;\n\n\n\n\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}