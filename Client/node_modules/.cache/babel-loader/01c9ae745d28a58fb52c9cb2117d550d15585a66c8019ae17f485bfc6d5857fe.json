{"ast":null,"code":"var _jsxFileName = \"/Users/oleg/katy/Saaga/Ibrahim/frontend/laitekanta/Client/src/components/Login/loginButton.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport Modal from 'react-modal';\nimport './loginButton.css';\nimport Axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst LoginButton = () => {\n  _s();\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const [errorMessage, setErrorMessage] = useState('');\n  const handleOpenModal = () => {\n    setIsModalOpen(true);\n  };\n  const handleCloseModal = () => {\n    setIsModalOpen(false);\n  };\n  const checkCredentials = () => {\n    Axios.post(\"http://localhost:3001/api/laitekanta/users\", {\n      username: username,\n      password: password\n    }).then(response => {\n      const isValid = response.data.isValid;\n      if (isValid) {\n        // Credentials are correct\n        setErrorMessage('');\n        handleLogin();\n      } else {\n        // Credentials are incorrect\n        setErrorMessage('Invalid username or password');\n      }\n    }).catch(error => {\n      // Handle error\n      console.error(error);\n      setErrorMessage('Username or password are incorrect');\n    });\n  };\n  const handleLogin = () => {\n    // Handle successful login\n    setUsername('');\n    setPassword('');\n    setIsModalOpen(false);\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleOpenModal,\n      className: \"logbtn\",\n      children: \"Kirjaudu sis\\xE4\\xE4n\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      isOpen: isModalOpen,\n      onRequestClose: handleCloseModal,\n      className: \"modal\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Please enter username and password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"loginForm\",\n        onSubmit: e => {\n          e.preventDefault();\n          checkCredentials();\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"username\",\n          children: \"Username:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          name: \"username\",\n          type: \"text\",\n          autoComplete: \"username\",\n          required: true,\n          id: \"username\",\n          value: username,\n          style: {\n            width: '50px'\n          },\n          onChange: e => setUsername(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"password\",\n          children: \"Password:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          name: \"password\",\n          autoComplete: \"current-password\",\n          required: true,\n          id: \"password\",\n          type: \"password\",\n          value: password,\n          onChange: e => setPassword(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"invalid-feedback\",\n          children: errorMessage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"submitbtn\",\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s(LoginButton, \"4AU5c7tI9c/ouRAcMDKE8Y8is/4=\");\n_c = LoginButton;\nexport default LoginButton;\nvar _c;\n$RefreshReg$(_c, \"LoginButton\");","map":{"version":3,"names":["React","useState","Modal","Axios","jsxDEV","_jsxDEV","Fragment","_Fragment","LoginButton","_s","isModalOpen","setIsModalOpen","username","setUsername","password","setPassword","errorMessage","setErrorMessage","handleOpenModal","handleCloseModal","checkCredentials","post","then","response","isValid","data","handleLogin","catch","error","console","children","onClick","className","fileName","_jsxFileName","lineNumber","columnNumber","isOpen","onRequestClose","onSubmit","e","preventDefault","htmlFor","name","type","autoComplete","required","id","value","style","width","onChange","target","_c","$RefreshReg$"],"sources":["/Users/oleg/katy/Saaga/Ibrahim/frontend/laitekanta/Client/src/components/Login/loginButton.jsx"],"sourcesContent":["import React, { useState } from 'react';\nimport Modal from 'react-modal';\nimport './loginButton.css';\nimport Axios from 'axios';\n\nconst LoginButton = () => {\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const [errorMessage, setErrorMessage] = useState('');\n\n  const handleOpenModal = () => {\n    setIsModalOpen(true);\n  };\n\n  const handleCloseModal = () => {\n    setIsModalOpen(false);\n  };\n\n  const checkCredentials = () => {\n    Axios.post(\"http://localhost:3001/api/laitekanta/users\", {\n      username: username,\n      password: password\n    })\n      .then((response) => {\n        const isValid = response.data.isValid;\n        if (isValid) {\n          // Credentials are correct\n          setErrorMessage('');\n          handleLogin();\n        } else {\n          // Credentials are incorrect\n          setErrorMessage('Invalid username or password');\n        }\n      })\n      .catch((error) => {\n        // Handle error\n        console.error(error);\n        setErrorMessage('Username or password are incorrect');\n      });\n  };\n\n  const handleLogin = () => {\n    // Handle successful login\n    setUsername('');\n    setPassword('');\n    setIsModalOpen(false);\n  };\n\n  return (\n    <>\n      <button onClick={handleOpenModal} className='logbtn'>Kirjaudu sisään</button>\n      <Modal isOpen={isModalOpen} onRequestClose={handleCloseModal} className='modal'>\n          <h2>Please enter username and password</h2>\n          <form className='loginForm' onSubmit={(e) => { e.preventDefault(); checkCredentials(); }}>\n            <label htmlFor=\"username\">Username:</label>\n            <input\n              name=\"username\"\n              type=\"text\"\n              autoComplete=\"username\"\n              required\n              id=\"username\"\n              value={username}\n              style={{width: '50px'}}\n              onChange={(e) => setUsername(e.target.value)}\n            />\n            <label htmlFor=\"password\">Password:</label>\n            <input\n              name=\"password\"\n              autoComplete=\"current-password\"\n              required\n              id=\"password\"\n              type=\"password\"\n              value={password}\n              onChange={(e) => setPassword(e.target.value)}\n            />\n            <div className=\"invalid-feedback\">{errorMessage}</div>\n            <button type=\"submit\" className='submitbtn'>Submit</button>\n          </form>\n      </Modal>\n    </>\n  );\n};\n\nexport default LoginButton;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}